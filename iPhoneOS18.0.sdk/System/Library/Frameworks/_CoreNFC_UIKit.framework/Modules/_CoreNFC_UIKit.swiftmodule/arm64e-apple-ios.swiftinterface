// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.3.38 clang-1600.0.20.6)
// swift-module-flags: -target arm64e-apple-ios18.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-bare-slash-regex -user-module-version 350.23.1 -module-name _CoreNFC_UIKit
@_exported import CoreNFC
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@available(iOS 17.4, *)
@available(watchOS, unavailable)
@available(tvOS, unavailable)
@available(macOS, unavailable)
@available(visionOS, unavailable)
public enum NFCWindowSceneEvent : Swift.Hashable, Swift.Codable, Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
  case readerDetected
  case presentation
  public static func == (a: _CoreNFC_UIKit.NFCWindowSceneEvent, b: _CoreNFC_UIKit.NFCWindowSceneEvent) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public func encode(to encoder: any Swift.Encoder) throws
  public var hashValue: Swift.Int {
    get
  }
  public init(from decoder: any Swift.Decoder) throws
}
@available(iOS 17.4, *)
@available(watchOS, unavailable)
@available(tvOS, unavailable)
@available(macOS, unavailable)
@available(visionOS, unavailable)
public protocol NFCWindowSceneDelegate {
  func windowScene(_ windowScene: UIKit.UIWindowScene, didReceiveNFCWindowSceneEvent event: _CoreNFC_UIKit.NFCWindowSceneEvent)
}
@available(iOS 17.4, *)
@available(tvOS, unavailable)
@available(macOS, unavailable)
@available(visionOS, unavailable)
extension UIKit.UIScene.ConnectionOptions {
  #if compiler(>=5.3) && $NoncopyableGenerics
  @_Concurrency.MainActor @preconcurrency public var nfcEvent: _CoreNFC_UIKit.NFCWindowSceneEvent? {
    get
  }
  #else
  @_Concurrency.MainActor @preconcurrency public var nfcEvent: _CoreNFC_UIKit.NFCWindowSceneEvent? {
    get
  }
  #endif
}
