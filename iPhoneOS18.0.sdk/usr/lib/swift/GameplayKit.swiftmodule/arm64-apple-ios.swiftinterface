// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.3.38 clang-1600.0.20.6)
// swift-module-flags: -target arm64-apple-ios18.0 -enable-objc-interop -autolink-force-load -enable-library-evolution -module-link-name swiftGameplayKit -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-bare-slash-regex -user-module-version 2 -module-name GameplayKit
import CoreGraphics
@_exported import GameplayKit
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import simd
@available(iOS 9.0, macOS 10.11, tvOS 9.0, *)
extension GameplayKit.GKPath {
  convenience public init(points: [Swift.SIMD2<Swift.Float>], radius: Swift.Float, cyclical: Swift.Bool)
}
@available(iOS 10.0, macOS 10.12, tvOS 10.0, *)
extension GameplayKit.GKPath {
  convenience public init(points: [Swift.SIMD3<Swift.Float>], radius: Swift.Float, cyclical: Swift.Bool)
}
@available(iOS 9.0, macOS 10.11, tvOS 9.0, *)
extension GameplayKit.GKPolygonObstacle {
  convenience public init(points: [Swift.SIMD2<Swift.Float>])
}
@available(iOS 9.0, macOS 10.11, tvOS 9.0, *)
extension GameplayKit.GKEntity {
  #if compiler(>=5.3) && $NoncopyableGenerics
  public func component<ComponentType>(ofType componentClass: ComponentType.Type) -> ComponentType? where ComponentType : GameplayKit.GKComponent
  #else
  public func component<ComponentType>(ofType componentClass: ComponentType.Type) -> ComponentType? where ComponentType : GameplayKit.GKComponent
  #endif
  public func removeComponent<ComponentType>(ofType componentClass: ComponentType.Type) where ComponentType : GameplayKit.GKComponent
}
@available(iOS 9.0, macOS 10.11, tvOS 9.0, *)
extension GameplayKit.GKStateMachine {
  #if compiler(>=5.3) && $NoncopyableGenerics
  public func state<StateType>(forClass stateClass: StateType.Type) -> StateType? where StateType : GameplayKit.GKState
  #else
  public func state<StateType>(forClass stateClass: StateType.Type) -> StateType? where StateType : GameplayKit.GKState
  #endif
}
